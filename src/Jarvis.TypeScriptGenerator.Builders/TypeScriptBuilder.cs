using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Jarvis.TypeScriptGenerator.Builders
{
    public class TypeScriptBuilder
    {
        private readonly string _baseFolder;
        private readonly string _ngModule;
        private readonly IList<string> _references = new List<string>();

        public TypeScriptBuilder(string baseFolder, string ngModule)
        {
            _baseFolder = baseFolder;
            _ngModule = ngModule;
        }

        public void AddReference(string reference)
        {
            this._references.Add(reference);
        }

        public string GenerateClientApi(Type controllerType, string ns)
        {
            var t = new TypeScriptApiController(ns, controllerType, "api");
            var fileName = Path.Combine(_baseFolder, t.FileName + ".ts");
            using (var w = new StreamWriter(fileName, false))
            {
                w.WriteLine("/*========================================================*/");
                w.WriteLine("/* THIS FILE IS AUTOGENERATED - DO NOT EDIT               */");
                w.WriteLine("/*--------------------------------------------------------*/");
                w.WriteLine("/* Angular service and typescript models for              */");
                w.WriteLine("/*                                                        */");
                w.WriteLine("/* {0} */", (controllerType.Name + "                                                                       ").Substring(0, 54));
                w.WriteLine("/*                                                        */");
                w.WriteLine("/* generated on {0}                       */", DateTime.Now.ToString("s"));
                w.WriteLine("/* WebApi => ng-typescript (c) Proximo srl                */");
                w.WriteLine("/*========================================================*/");
                w.WriteLine();

                foreach (var reference in this._references)
                {
                    w.WriteLine("///<reference path=\"{0}\"/>",reference);
                }
                w.WriteLine();

                w.Write(t.Generate());
            }

            return fileName;
        }
    }
}
